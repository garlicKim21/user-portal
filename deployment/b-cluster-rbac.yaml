# =================================================================
# 1. 역할 정의 (ClusterRole)
# 기존 역할을 재사용하고, 네임스페이스 관리자 역할을 추가합니다.
# =================================================================
# Viewer Role (기존과 동일, 변경 없음)
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: viewer-role
rules:
- apiGroups: [ "", "apps", "extensions", "networking.k8s.io" ]
  resources: [ "pods", "services", "deployments", "ingresses", "configmaps" ]
  verbs: [ "get", "list", "watch" ]
---
# Developer Role (기존과 동일, 변경 없음)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: developer-role
rules:
- apiGroups: [ "", "apps", "extensions", "networking.k8s.io" ]
  resources: [ "pods", "services", "deployments", "ingresses", "configmaps", "secrets" ]
  verbs: [ "get", "list", "watch", "create", "update", "patch", "delete" ]
- apiGroups: [ "" ]
  resources: [ "pods/log" ]
  verbs: [ "get", "list" ]
---
# [신규] Namespaced Admin Role - 특정 네임스페이스 내에서만 모든 권한
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespaced-admin-role
rules:
- apiGroups: [ "*" ]
  resources: [ "*" ]
  verbs: [ "*" ]

# =================================================================
# 2. 클러스터 전체 권한 부여 (ClusterRoleBinding)
# =================================================================
# 'kim' (cluster-admins 그룹)에게 클러스터 전체 관리자 권한 부여
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-admins-binding
subjects:
- kind: Group
  name: cluster-admins # Keycloak 그룹: cluster-admins
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: cluster-admin # 쿠버네티스 기본 제공 ClusterRole
  apiGroup: rbac.authorization.k8s.io

# =================================================================
# 3. 'blue' 네임스페이스 권한 부여 (RoleBinding)
# =================================================================
# 'yoon' (blue-admins 그룹)에게 'blue' 네임스페이스 관리자 권한 부여
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: blue-admins-binding
  namespace: blue
subjects:
- kind: Group
  name: blue-admins # Keycloak 그룹: blue-admins
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: namespaced-admin-role # 위에서 정의한 네임스페이스 관리자 역할
  apiGroup: rbac.authorization.k8s.io
---
# 'byun' (blue-developers 그룹)에게 'blue' 네임스페이스 개발자 권한 부여
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: blue-developers-binding
  namespace: blue
subjects:
- kind: Group
  name: blue-developers # Keycloak 그룹: blue-developers
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: developer-role
  apiGroup: rbac.authorization.k8s.io
---
# 'kang' (blue-viewers 그룹)에게 'blue' 네임스페이스 뷰어 권한 부여
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: blue-viewers-binding
  namespace: blue
subjects:
- kind: Group
  name: blue-viewers # Keycloak 그룹: blue-viewers
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: viewer-role
  apiGroup: rbac.authorization.k8s.io

# =================================================================
# 4. 'red' 네임스페이스 권한 부여 (RoleBinding)
# =================================================================
# 'byun'과 'kang' (red-viewers 그룹)에게 'red' 네임스페이스 뷰어 권한 부여
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: red-viewers-binding
  namespace: red
subjects:
- kind: Group
  name: red-viewers # Keycloak 그룹: red-viewers
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: viewer-role
  apiGroup: rbac.authorization.k8s.io
